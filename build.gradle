plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.20'
    id "org.jlleitschuh.gradle.ktlint" version '10.3.0'
}

group = 'love.chihuyu'
version = ''

repositories {
    mavenCentral()
    maven { url = 'https://repo.purpurmc.org/snapshots/' }
    maven { url = 'https://repo.codemc.org/repository/maven-public/' }
}

dependencies {
    compileOnly 'org.purpurmc.purpur:purpur-api:1.19.3-R0.1-SNAPSHOT'
    compileOnly 'dev.jorel:commandapi-core:8.7.5'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.exposed:exposed-core:0.40.1'
    implementation 'org.jetbrains.exposed:exposed-dao:0.40.1'
    implementation 'org.jetbrains.exposed:exposed-jdbc:0.40.1'
    implementation 'org.jetbrains.exposed:exposed-java-time:0.40.1'
    implementation 'mysql:mysql-connector-java:8.0.30'
}

ktlint {
    ignoreFailures = true
    disabledRules = ["no-wildcard-imports"]
}

def targetJavaVersion = 17
java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}

jar {
    from {
        duplicatesStrategy 'exclude'
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}



processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}